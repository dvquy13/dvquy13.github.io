[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi, Iâ€™m Quyâ€”an Applied Data Scientist. I blog about RecSys, LLM, ML, Productivity and other random things.\nHere are some of my side projects regarding the above topics.\nI spend most of my other free time in football and DotA. Recently I started to learn badminton but damn this sport is hard.\nIâ€™m from Hanoi, Vietnam ðŸ‡»ðŸ‡³. Currently living in Singapore ðŸ‡¸ðŸ‡¬."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Review Rec Bot\n\n\nDemo building Restaurant Recommendation Chatbot based on Yelp Public Data\n\n\n\nllm\n\n\ntech\n\n\n\n\n\n\nSep 22, 2024\n\n\n4 min\n\n\n\n\n\n\n\n\n\n\n\n\nReviews Parsing MLSys\n\n\nSetting up a ML system on K8s\n\n\n\nmachine learning\n\n\ntech\n\n\n\n\n\n\nJun 21, 2024\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/review-rec-bot/index.html",
    "href": "projects/review-rec-bot/index.html",
    "title": "Review Rec Bot",
    "section": "",
    "text": "In this project, I demo a RAG engine usiness Recommendation Chatbot based on Yelp Data\n\n\n\n\n\n\nProject Details\n\n\n\n\n\n\n\nDemo\n\n\n\nProblem Statement\nListing/reservation businesses like Yelp offer value to users by providing useful information to make them find out where to go next. Good search and recommendation systems go a long way, but they are still far from delivering the ultimate experience where users can interact naturally with the system for complex queries or have a conversation to drill down their needs.\n\n\nApproach\nBuild a chatbot assistant to assist users in discovering places to go and booking.\nWorkflow:\n\nDownload Yelp reviews data. Sample 5,240 reviews from 100 businesses.\nSet up development environment including experimentation tracking via MLflow, observability with Arize Phoenix\nBuild MVP version using LlamaIndex, Qdrant\nBuild synthetic evaluation datasets with 30 questions for retrieval and response. Manual response dataset are gradually built up and added based on error analysis\nConduct error analysis and look at the modelâ€™s output to come up with new iteration ideas. Run a total of 10 experiments to improve the RAG, with notable attempts including: Replacing Llama-8.1B with GPT-4o-mini, Fine-tuning Embedding Model, Hybrid Retrievers, Semantic Chunking, BGE Reranker, Query Expansion\nBuild RAG Agent based on OpenAI API with Query Engine tool and Reservation Service tool. Chatbot UI is built with Chainlit.\n\n\n\nEvaluation\nEvaluation results can be found here.\nTwo proposed key metrics are Retrieval Hit Rate and Response Correctness.\nRetrieval is a critical component in any RAG system. Along with data prep, retrieval sits at the top of the pipeline so any improvements in these fronts is more likely to improve the overall system. Hit rate is chosen as a key metric because since we can employ rerank as a subsequent step, we have room to optimize for the ranking issues.Â \nFor response, Correctness measures both how relevant the answer is with respect to the query and how correct it is compared to the referenced answer. Itâ€™s therefore a better indicator than pure relevance, which is just based on the query and hence easier to get right.\nFor reference, Response Correctness on synthetic dataset has improved +166% from 1.75 / 5.00 from MVP version to 4.67 / 5.00 on the current version. The current Retrieval Hit Rate @ 50 reaches 73%, not directly comparable but at MVP version Retrieval Hit Rate @ 10 was 20%.\nAs next steps, while there is not much room to improve Response Correctness, we ought to increase Retrieval Hit Rate to 90% which should be doable since this dataset only contains a small amount of data.\n\n\nLearnings/Remarks\n\nUsing question-style query leads to 5-20% uplift in retrieval hit rate compared to using keyword search\nBM25 Retriever alone results in 200% increase in retrieval effectiveness including hit rate, average precision, MRR and NDCG\nFine-tuning small embedding model like Snowflake/snowflake-arctic-embed-m-v1.5 yield +80% retrieval effectiveness, especially rankings of the retrieved nodes\nUsing GPT-4o-mini as response synthesizer significantly improve the quality of response in all aspects (especially correctness from 2.6 to 3.8) compared to Llama 3.1-8B-Instruct\nUsing TreeSummarize with custom prompt yields a +10% uplift on response correctness evaluation, from 3.97 to 4.37. Based on eyeballing we also see a way better response that is recommendation-like\n\n\n\nChallenges\nChallenge 1: Auto-retrieval not reliable\nWhile theoretically both precision and recall should be greatly improved if we are able to apply the right filters for User questions instead of relying on embedding/keyword matching, my first attempt to apply auto-retrieval with ChromaDB did not yield promising results. There were at least two syntactic issues which broke the agentic workflow. Even after fixing those two the unreliable nature of this approach is still there and I also witnessed a -10% degradation in Retrieval Hit Rate.\nIn the end I forfeited the feature but nevertheless look forward to a way to re-applying this technique.\nChallenges 2: Indexing pipeline takes too long\nIndexing 70K nodes from 30K reviews for 400 businesses takes more than 6 hours!\n\n\nFuture Improvements\n\nGuardrail system inputs and outputs\nExperiment with Contextual Compression and Filters\nFine tune LLM Re-ranker (FlagEmbedding BGE Reranker)\nTry ColBERT as a new retriever (may be add to the list of retrievers)\nTry different loss function in training embeddings\nImprove the diversity by implement custom re-ranker that weight downs the reviews from the already seen biz_id\n\n If you find this article helpful, please cite this writeup as:\n\nQuy, Dinh. (Sep 2024). Review Rec Bot. dvquy13.github.io/icy-touch. https://dvquy13.github.io/icy-touch/projects/review-rec-bot/."
  },
  {
    "objectID": "posts/site-search-elasticsearch/index.html",
    "href": "posts/site-search-elasticsearch/index.html",
    "title": "A Site-Search Engineerâ€™s Journal Approaching Relevance Challenges in Elasticsearch Query Construction",
    "section": "",
    "text": "This article is originally published in Towards Data Science"
  },
  {
    "objectID": "posts/site-search-elasticsearch/index.html#appendix-1-detailed-breakdown-of-default-tfidf-matching-where-length-of-the-field-value-affect-overall-matching-score",
    "href": "posts/site-search-elasticsearch/index.html#appendix-1-detailed-breakdown-of-default-tfidf-matching-where-length-of-the-field-value-affect-overall-matching-score",
    "title": "A Site-Search Engineerâ€™s Journal Approaching Relevance Challenges in Elasticsearch Query Construction",
    "section": "Appendix 1: Detailed breakdown of default TFIDF matching where length of the field value affect overall matchingÂ score",
    "text": "Appendix 1: Detailed breakdown of default TFIDF matching where length of the field value affect overall matchingÂ score\n# Result\n{\n  \"hits\": {\n    \"hits\": [\n      {\n        \"_id\": \"003vietnamesepho\",\n        \"_score\": 1.0470967,\n        \"_source\": {\n          \"restaurant_name\": \"Vietnamese Pho\",\n          \"cuisine\": \"Vietnamese\",\n          \"rating\": 3\n        },\n        \"_explanation\": {\n          \"value\": 1.0470967,\n          \"description\": \"max of:\",\n          \"details\": [\n            {\n              \"value\": 0.13353139,\n              \"description\": \"sum of:\",\n              \"details\": [\n                {\n                  \"value\": 0.13353139,\n                  \"description\": \"weight(cuisine:vietnamese in 0) [PerFieldSimilarity], result of:\",\n                  \"details\": [...]\n                }\n              ]\n            },\n            {\n              \"value\": 1.0470967,\n              \"description\": \"sum of:\",\n              \"details\": [\n                # Matching score with \"vietnamese\"\n                {\n                  \"value\": 0.52354836,\n                  \"description\": \"weight(restaurant_name:vietnamese in 0) [PerFieldSimilarity], result of:\",\n                  \"details\": [\n                    {\n                      \"value\": 0.52354836,\n                      \"description\": \"score(freq=1.0), computed as boost * idf * tf from:\",\n                      \"details\": [\n                        {\n                          \"value\": 2.2,\n                          \"description\": \"boost\",\n                          \"details\": []\n                        },\n                        {\n                          \"value\": 0.47000363,\n                          \"description\": \"idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:\",\n                          ...\n                        },\n                        {\n                          \"value\": 0.50632906,\n                          \"description\": \"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:\",\n                          \"details\": [\n                            {\n                              \"value\": 1,\n                              \"description\": \"freq, occurrences of term within document\",\n                              \"details\": []\n                            },\n                            {\n                              \"value\": 1.2,\n                              \"description\": \"k1, term saturation parameter\",\n                              \"details\": []\n                            },\n                            {\n                              \"value\": 0.75,\n                              \"description\": \"b, length normalization parameter\",\n                              \"details\": []\n                            },\n                            # Notice the length=2 here is in the denominator,\n                            # which means that the higher the length the less\n                            # the score\n                            {\n                              \"value\": 2,\n                              \"description\": \"dl, length of field\",\n                              \"details\": []\n                            },\n                            {\n                              \"value\": 2.6666667,\n                              \"description\": \"avgdl, average length of field\",\n                              \"details\": []\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                },\n                # Matching score with \"pho\"\n                {\n                  \"value\": 0.52354836,\n                  \"description\": \"weight(restaurant_name:pho in 0) [PerFieldSimilarity], result of:\",\n                  # Details are exactly like above\n                  \"details\": [...]\n                }\n              ]\n            }\n          ]\n        }\n      },\n      {\n        \"_id\": \"002vietnamesephonoodle\",\n        \"_score\": 0.8942772,\n        \"_source\": {\n          \"restaurant_name\": \"Vietnamese Pho Noodle\",\n          \"cuisine\": \"Vietnamese\",\n          \"rating\": 4\n        },\n        \"_explanation\": {\n          \"value\": 0.8942772,\n          \"description\": \"max of:\",\n          \"details\": [\n            {\n              \"value\": 0.13353139,\n              \"description\": \"sum of:\",\n              \"details\": [...]\n            },\n            {\n              \"value\": 0.8942772,\n              \"description\": \"sum of:\",\n              \"details\": [\n                {\n                  \"value\": 0.4471386,\n                  \"description\": \"weight(restaurant_name:vietnamese in 1) [PerFieldSimilarity], result of:\",\n                  \"details\": [\n                    {\n                      \"value\": 0.4471386,\n                      \"description\": \"score(freq=1.0), computed as boost * idf * tf from:\",\n                      \"details\": [\n                        ...,\n                        {\n                          \"value\": 0.4324324,\n                          \"description\": \"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:\",\n                          \"details\": [\n                            ...,\n                            # Here the length=3 (greater than length=2 of the\n                            # above restaurant)\n                            {\n                              \"value\": 3,\n                              \"description\": \"dl, length of field\",\n                              \"details\": []\n                            },\n                            ...\n                          ]\n                        }\n                      ]\n                    }\n                  ]\n                },\n                {\n                  \"value\": 0.4471386,\n                  \"description\": \"weight(restaurant_name:pho in 1) [PerFieldSimilarity], result of:\",\n                  \"details\": [...]\n                }\n              ]\n            }\n          ]\n        }\n      }\n    ]\n  }\n}\n If you find this article helpful, please cite this writeup as:\n\nQuy, Dinh. (Jun 2023). A Site-Search Engineerâ€™s Journal Approaching Relevance Challenges in Elasticsearch Query Construction. dvquy13.github.io/icy-touch. https://dvquy13.github.io/icy-touch/posts/site-search-elasticsearch/."
  },
  {
    "objectID": "projects/reviews-parsing-mlsys/index.html",
    "href": "projects/reviews-parsing-mlsys/index.html",
    "title": "Reviews Parsing MLSys",
    "section": "",
    "text": "This project focuses on applying engineering practices to build a Machine Learning System in the domain of public reviews data.\n\n\n\n\n\n\nProject Details\n\n\n\n\n\n\n\nArchitecture\n\n\n\n\n\nDemo\n\n If you find this article helpful, please cite this writeup as:\n\nQuy, Dinh. (Jun 2024). Reviews Parsing MLSys. dvquy13.github.io/icy-touch. https://dvquy13.github.io/icy-touch/projects/reviews-parsing-mlsys/."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog Posts",
    "section": "",
    "text": "A Site-Search Engineerâ€™s Journal Approaching Relevance Challenges in Elasticsearch Query Construction\n\n\nA hierarchical keyword-matching approach\n\n\n\ntech\n\n\nsearch\n\n\n\n\n\n\nJun 1, 2023\n\n\n57 min\n\n\n\n\n\n\nNo matching items"
  }
]